[build-system]
requires = ["setuptools", "wheel"]

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output and verbosity
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
    "--asyncio-mode=auto",
    "--cov=app",
    "--cov=run_bot",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=xml",
    "--cov-config=tests/.coveragerc"
]

# Async support
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

# Markers for test categorization
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests (may take more than 1s)",
    "database: Tests requiring database",
    "redis: Tests requiring Redis",
    "discord: Tests requiring Discord API mocks",
    "cog: Tests for Discord bot cogs",
    "core: Tests for core modules",
    "cache: Tests for caching system",
    "translation: Tests for translation system",
    "reliability: Tests for reliability system",
    "performance: Performance and benchmark tests"
]

# Warnings filter
filterwarnings = [
    "ignore::RuntimeWarning",
    "ignore::DeprecationWarning", 
    "ignore::PendingDeprecationWarning"
]

# Test timeout
timeout = 300

# Minimum test coverage percentage
fail_under = 80

[tool.coverage.run]
source = ["app", "run_bot.py"]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*", 
    "*/logs/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    ".pytest_cache/*",
    "htmlcov/*"
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    
    # Don't complain about abstract methods
    "@(abc\\.)?abstractmethod",
]

ignore_errors = true
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
title = "Discord Bot MGM - Test Coverage Report"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true